@model IEnumerable<HotelReservationSystem.ViewModels.ReservationViewModel>
@{
    ViewData["Title"] = "Manage Reservations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">All Reservations</h2>

    <div class="card shadow mb-4">
        <div class="card-header bg-secondary text-white">
            <h5 class="mb-0">Filter Reservations</h5>
        </div>
        <div class="card-body">
            <form id="filterForm" class="row g-3">
                <div class="col-md-3">
                    <label for="startDateFilter" class="form-label">Check-in Date From</label>
                    <input type="date" class="form-control" id="startDateFilter">
                </div>
                <div class="col-md-3">
                    <label for="endDateFilter" class="form-label">Check-in Date To</label>
                    <input type="date" class="form-control" id="endDateFilter">
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <div>
                        <button type="button" id="applyFilters" class="btn btn-primary me-2">Filter</button>
                        <button type="button" id="resetFilters" class="btn btn-outline-secondary">Reset</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">My Reservations</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                @if (!Model.Any())
                {
                    <div class="alert alert-info">No reservations to display.</div>
                }
                else
                {
                    <table class="table table-striped table-hover" id="reservationsTable">
                        <thead class="thead-dark">
                            <tr>
                                <th>Room Number</th>
                                <th>Floor</th>
                                <th>Number of Beds</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Length of Stay (days)</th>
                                <th>Total Cost</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@(item.RoomNumber ?? "None")</td>
                                    <td>@item.Floor</td>
                                    <td>@item.Beds</td>
                                    <td>@(item.StartDate == default(DateTime) ? "None" : item.StartDate.ToString("dd.MM.yyyy"))</td>
                                    <td>@(item.EndDate == default(DateTime) ? "None" : item.EndDate.ToString("dd.MM.yyyy"))</td>
                                    <td>@((item.EndDate == default(DateTime) || item.StartDate == default(DateTime) ? 0 : (item.EndDate - item.StartDate).Days))</td>
                                    <td>@item.TotalCost.ToString("C2")</td>
                                    <td>
                                        <div class="btn-group">
                                            @if (item.ReservationID.HasValue)
                                            {
                                                <a asp-action="ReservationDetails" asp-controller="Public" asp-route-id="@item.ReservationID" class="btn btn-sm btn-outline-info">Details</a>
                                                <a asp-action="Delete" asp-controller="Public" asp-route-id="@item.ReservationID" class="btn btn-sm btn-outline-danger">Cancel</a>
                                            }
                                            else
                                            {
                                                <span class="text-danger">No Reservation ID</span>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            if (!$.fn.DataTable) {
                console.error("DataTables is not loaded. Check if scripts are included correctly.");
                return;
            }

            var table = $('#reservationsTable').DataTable({
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/en-GB.json"
                },
                "responsive": true,
                "order": [[4, "asc"]]
            });

            $("#guestFilter").on("keyup", function() {
                var value = this.value.toLowerCase().trim();
                table.column(0).search(value, true, false).draw();
            });

            $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
                var startDateFilter = $("#startDateFilter").val();
                var endDateFilter = $("#endDateFilter").val();

                if (!startDateFilter && !endDateFilter) {
                    return true;
                }

                var dateParts = data[4].split('.');
                if (data[4] === "None" || dateParts.length !== 3) {
                    console.warn("Invalid date format or missing date in row:", data[4]);
                    return false;
                }

                var rowDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);
                if (isNaN(rowDate)) {
                    console.warn("Unable to parse date:", data[4]);
                    return false;
                }

                var startDate = startDateFilter ? new Date(startDateFilter) : null;
                var endDate = endDateFilter ? new Date(endDateFilter) : null;

                if (startDate && !endDate) {
                    return rowDate >= startDate;
                } else if (!startDate && endDate) {
                    return rowDate <= endDate;
                } else if (startDate && endDate) {
                    return rowDate >= startDate && rowDate <= endDate;
                }

                return true;
            });

            $("#applyFilters").on("click", function() {
                var startDateFilter = $("#startDateFilter").val();
                var endDateFilter = $("#endDateFilter").val();

                if (startDateFilter && endDateFilter && new Date(startDateFilter) > new Date(endDateFilter)) {
                    alert("Start date cannot be later than end date!");
                    return;
                }
                table.draw();
            });

            $("#resetFilters").on("click", function() {
                $("#filterForm")[0].reset();
                $("#guestFilter").val('');
                $("#startDateFilter").val('');
                $("#endDateFilter").val('');
                table.column(0).search('').draw();
            });
        });
    </script>
}